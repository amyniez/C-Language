
	printf("sum = %d\n", sum);
	return 0;
}


//2.从数组中找到某个数字的位置
int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	int k = 110;

	int size = sizeof(arr) / sizeof(arr[0]);//计算array中元素的个数
	int left = 0;//左下标，从0开始计算
	int right = size - 1;//右下标，最大值为元素个数-1

	//二分查找原理
	while (left<=right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] > k)
		{
			right = mid - 1;
		}
		else if (arr[mid] < k)
		{
			left = mid + 1;
		}
		else
		{
			printf("找到了，下标是：%d\n", mid);
			break;
		}
	}

	if (left > right)
	{
		printf("WARNING：找不到您要的值！\n");
	}

	return 0;
}

//3.模拟用户登录场景，并且只能登录三次
//  如果三次密码输入错误，自动退出程序
int main()
{
	int i = 0;
	char password[20] = { 0 };
	for (i = 0; i < 3; i++)
	{
		printf("请输入密码：");
		scanf("%s",password);
		if (strcmp(password, "123456789") == 0)//strcmp库函数需要调用string.h头文件
		{
			printf("登陆成功\n");
			break;
		}
		else
		{
			printf("密码错误\n");
		}
	}
	if (i == 3)
	{
		printf("三次密码均输入错误，退出程序\n");
	}
	return 0;
}
