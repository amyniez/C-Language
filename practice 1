#include <stdio.h>
#include <string.h>

//1.计算n的阶乘之和
int main()
{
	int i = 0;
	int n = 0;
	//int ret = 1;
	int sum = 0;
	for (n = 1; n <= 8; n++)
	{
		//注意ret的位置,ret始终要从1开始累积
		//否则计算出的结果可能会出现错误
		int ret = 1;
		for (i = 1; i <= n; i++)
		{
			ret *= i;
		}
		sum = sum + ret;
	}
	printf("sum = %d\n", sum);
	return 0;
}

//2.从数组中找到某个数字的位置
int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	int k = 110;

	int size = sizeof(arr) / sizeof(arr[0]);//计算array中元素的个数
	int left = 0;//左下标，从0开始计算
	int right = size - 1;//右下标，最大值为元素个数-1

	//二分查找原理
	while (left<=right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] > k)
		{
			right = mid - 1;
		}
		else if (arr[mid] < k)
		{
			left = mid + 1;
		}
		else
		{
			printf("找到了，下标是：%d\n", mid);
			break;
		}
	}

	if (left > right)
	{
		printf("WARNING：找不到您要的值！\n");
	}

	return 0;
}

//3.模拟用户登录场景，并且只能登录三次
//  如果三次密码输入错误，自动退出程序
int main()
{
	int i = 0;
	char password[20] = { 0 };
	for (i = 0; i < 3; i++)
	{
		printf("请输入密码：");
		scanf("%s",password);
		if (strcmp(password, "123456789") == 0)//strcmp库函数需要调用string.h头文件
		{
			printf("登陆成功\n");
			break;
		}
		else
		{
			printf("密码错误\n");
		}
	}
	if (i == 3)
	{
		printf("三次密码均输入错误，退出程序\n");
	}
	return 0;
}

//4.演示多个字符从两端移动，向中间汇聚
#include <stdio.h>
#include <string.h>//strlen()
#include <windows.h>
#include <stdlib.h>

int main()
{
	char arr1[] = "Thank god!!!";
	char arr2[] = "************";
	
	//char arr1[]="abc";
	//表示为[a b c \0]，一共四个字符
	//所以要减去2，即4-2
	//int right = sizeof(arr1) / sizeof(arr1[0]) - 2;
	int left = 0;
	int right = strlen(arr1) - 1;

	while (left <= right)
	{
		arr2[left] = arr1[left];
		arr2[right] = arr1[right];
		printf("%s\n", arr2);
		//休息一秒，以毫秒为单位
		Sleep(1000);
		system('cls');//cls-clean screen-清空屏幕
		left++;
		right--;
	}
	printf("%s\n", arr2);
	return 0;
}
